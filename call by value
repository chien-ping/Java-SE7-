複製一份基本型態資料或複製一份參考的值(heap位置的)到方法裡
會重新在stacks找一個新的位置，儲存得到的備份資料，位置已不相同
因此在statck的值並不會被取代，除非是物件，透過stack所儲存的參考值，
找到物件存放在heap的資料，進行修改，
但是其本身在stack的位址值，還是不變的，
但是此法對於String是無法修改的，因為String是immutable，即使
透過複製得到的位址值，想修改heap位址的物件本體，
s = "修改";
但是其編譯的結果為==> s = new("修改");
是實上是新建一個字串物件，
然後把參考值放到s，
已經與原本的物件不相干



